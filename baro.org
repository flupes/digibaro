#+TITLE Digital Barograph
#+AUTHOR: Lorenzo Fluckgier

* Intro
 - This is a new idea derived from the interrupted [[elec.org][weather station]].
 - The more accutely missing data in typical consumer weather station is
 atmospheric pressure: it is often not really accurate, and certainly lack
 of historical data. A quick search does not show there is much on the
 marine market (but need to refine this)
* Concepts
 - Pressure will be recorded on at least hourly basis with an accurate
   absolute pressure sensor.
 - Potentially, temperature (local, external would require wireless
   transmission, see weather station project) and humidity will be
   recorded too
 - The measurements will be tied to an accurate real time clock
 - Historical data of at least five days / every 3h should be stored.
 - A nice extension will be storing all historical data to sim card and
   deliver a personal computer application to read it.
 - A graphical display will show daily / weekly graphs of the pressure
 - In addition, the system should allow to "browse" the data to get the
   exact numerical value at any timestamp
 - The clock will display GMT + local time and have several alarms
* Interesting similar products
** [[http://www.bohlken.net/bg/bg1512_en.htm][High Precision Marine Barograph BG1512]]
 - 300 Euro
 - Graphical display (line)
 - Send NMEA data (4800bps)
** [[http://www.digitalbarograph.com/][DBX1 for ASI (Aquatex Scientific Instruments)]]
 - $370
 - Nicely enclosed
 - Graphical bar display
 - Excellent user manual
 - 1 day and 5 day history
** [[http://www.nasamarine.com/proddetail.php?prod=MeteoMan][MeteoMan from NASA Instruments]]
  - ~ 200 Euro
  - Require 12V DC source!
  - Huge display (150mmx112mm)
  - Accept wind and temperature NEMA inputs
  - record (display?) on 40h, 80h and 160h (~6.7day)
  - installation manual, but no info on utilization
* Size or data samples fitting on the 1K EEPROM
** Various solutions that did not made it
*** First idea
    Max pixel in width = 128
    Probably should have 2 pixel per bar, but this is to evaluate
    Desire 3 displays: 5 days - 1 day (~36h better) - 3 jours
    Pressure can be coded on a int (2 bytes)
    60 measures x 2 bytes x 3 screen = 360 bytes
    -> already a good part of the eeprom + good chunk of RAM is we want to display fast
*** Another option:
 - 1 sample every 3h x 7 days -> 56 points
 - 1 sample every 1h x 36 h -> 36 points
 - 1 sample every 10min x 
| step (min) | period | nb samples | comment |
|------------+--------+------------+---------|
|          6 |      3 |         30 |         |
|         10 |      3 |         18 |         |
|          6 |      6 |         60 |         |
|         20 |     24 |         72 | 1 day   |
|         30 |     24 |         48 | 1 day   |
|         30 |     30 |         60 | 1 day + |
|         30 |     36 |         72 | 1.5 day |
|         60 |     36 |         36 | 1.5 day |
|         90 |    120 |         80 | 5 days  |
|        120 |    120 |         60 | 5 days  |
|        180 |    168 |         56 | 7 days  |
#+TBLFM: $3=60*$2/$1  
*** Better solution
We in fact need at least 5 bytes for each data sample:
- 2 for pressure
- 2 for 2x temperature reading (coding in Farenheit seems a good idea!)
- 1 for humidity
It is much easier if each graph contains the same number of points
| # samples | Every | '= Min' | Duration (h) | Comment                           |
|-----------+-------+---------+--------------+-----------------------------------|
|        48 | 3h    |     180 |          144 | Show *6 days*, enough to notice a |
|           |       |         |              | longer term tendency              |
|        48 | 1h    |      60 |           48 | Show *2 full days*, the default   |
|           |       |         |              | screen showing the tendency       |
|        48 | 15min |      15 |           12 | Show *12h* with a resolution      |
|           |       |         |              | allowing to detect a tornado      |
#+TBLFM: $3=Min::$4=($1*$3)/60
The 3x48 samples above generate:
- 144 samples for the 3 buffers
- 144x5 = 720 bytes in EEPROM for storage
- Need at least 6 more pointers for the ring buffer [(last + current) x 3]
- graphs 96 pixel wide, leaving room on the side for scale
Savings if we do not overlap the buffers (there is redundancy in the data):
- 2 days buffer -> -12 samples (12h from the 15min buffer)
- 6 days buffer -> -16 samples (48/3=16 from the 1h buffer)
-> total of 28 samples -> ~20% memory saving (or 20% longer time span)
=> for a first implementation this is not really interesting and would 
complicate the matter quite a bit
** Current solution
 - Use only 2 graphs / sampling of data: it simplifies the code and the
   user interface
 - We should not use the full width of the lcd because we need scale labels
 - 1 px per sample looks good (given that we can store enough
 - 96px graph width x 32px height looks good
 - If shrinking the data sample to fit on 4 bytes, we can get 2 buffers of
   96 samples
** Detail of data storage
*** Single sample
 - 16 bits for pressure: store deciPascal rather than full resolution Pa
 - 10 bits for 1 temperature reading (drop the outside temperature for
   now: the wireless receiver will add enough complexity that we could
   afford more storage at this point): -40degC -> +60degC with 0.1deg res.
 - 6 bits for humidity: 64 level ~ 2% resolution
*** Buffers
 - 1 day buffer + 1 week buffer of 96 samples each
 - week buffer uses direct EEPROM: 392 bytes\\
   96 samples x 4 byte (data sample) + 4 (timestamp) + 4 (indexes)
 - day buffer uses Endurance EEPROM: 512 bytes for endurance 8\\
   st = status / ix = index / ts = timestamp\\
   8(endur) x ( 4(st)+4(ix) + 4(st)+4(ts) ) + 96 samples x 4
 - 392 + 512 leaves 120 bytes to stores other info (like extremas +
   setting)
 - 6min minimal time interval -> 10 samples / h -> 87600 samples / year\\
   8 times endurance -> 8E6 writes -> 9.1 years of continuous operation
*** Time Coverage
| sampling period | time span with 96 sample buffer |
|-----------------+---------------------------------|
| 6 min           | 16 h                            |
| 15 min          | 24 h                            |
| 20 min          | 32 h                            |
| 1 h (60min)     | 4 days (96h)                    |
| 1 1/2h (90min)  | 6 days                          |
| 2 h (120min)    | 8 days                          |
* Tasks
** Hardware
** Infrastructure
*** CMake build system for Arduino projects
*** Graphic library for Serial LCD
**** Adaptation of the DOGM128 library to the Adafruit ST7565P
     :LOGBOOK:
     CLOCK: [2011-06-02 Thu 21:00]--[2011-06-03 Fri 00:00]
     CLOCK: [2011-06-03 Fri 21:00]--[2011-06-04 Sat 00:00]
     :END:
** Coding
*** AnalogFiveButtons
*** Eeprom Utils
*** User interface
*** Graph
*** Sensor
* Plan
** Transition WeatherLcdGraph to use the Dogm128 library
*** Create my own C++ abstraction class for graphics (Dogm.cpp is not satisfactory)
*** Translate the exiting graph to use the new abstraction graphic library
*** Improve the graph with time axis legend
*** Select fonts (Unibody / Ubuntu ?): 1x 4x6  + 1x 5x7 + 1x?x12
*** Improve the full page layout with bigger time display, UTC, etc
** Use UTC time + timezone
** Make the system low power
*** Learn how to sleep the Arduino board properly
*** Implement a timer to turn off the backlight after some time
*** Use the RTC to generate 1s interrupts to wake up the board and display proper time + capture samples
y
